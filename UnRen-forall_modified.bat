@echo off
chcp 65001
REM --------------------------------------------------------------------------------
REM Configuration:
REM	Set a Quick Save and Quick Load hotkey - http://www.pygame.org/docs/ref/key.html
REM --------------------------------------------------------------------------------
set "quicksavekey=K_F5"
set "quickloadkey=K_F9"
REM --------------------------------------------------------------------------------
REM !! END CONFIG !!
REM --------------------------------------------------------------------------------
REM The following variables are Base64 encoded strings for unrpyc and rpatool
REM Due to batch limitations on variable lengths, they need to be split into
REM multiple variables, and joined later using powershell.
REM --------------------------------------------------------------------------------
REM unrpyc by CensoredUsername
REM	https://github.com/CensoredUsername/unrpyc
REM Edited to remove multiprocessing and adjust output spacing 44febb0 2019-10-07T07:06:47.000Z
REM	https://github.com/F95Sam/unrpyc
REM --------------------------------------------------------------------------------
REM set decompcab01=

set decompcab01=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
set decompcab02=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
set decompcab03=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
set decompcab04=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
set decompcab05=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
set decompcab06=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
set decompcab07=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
set decompcab08=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
set decompcab09=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
set decompcab10=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
set decompcab11=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
set decompcab12=pSR7DdctTZw1nfFS6rYEfZh2Rc4uwcIadsiqHYooEN3NnuiGk12XrVN6SDabpJE/y5Q2KJ8xVCgHBXo4ckaSNPiRC9s2GKsxz2p909g9MdslVbd7YZ4PUDwW6xXlFWH/dY4MAGZoMTenlpZVH/ojBKQjJegBnWwx4r01lcxCsFTQsdSZU+bQmmuM6Dqd2axIjfD8St6Wcw415FeswMQD1ncvCmQY0nvLZVYvKbaHT3fiUCcYjZw7OUjAiJlv66xcIj9OVkYR1sZOeCNmNTevDynTmCX8LCZQYuxUV6itYrleRcBe4nguy0M5iQ7pQ1bxJXS9rWLFAYibZHGrf4ynoTq/aAlLHPREU9XZ/jQIYmJO1FASVw1mICcKmRDmUS0FjIg44tD3XqbS3QqGa2X24wbScwCBOIrR4DTGf+4jDzMxTbgx2Irfrr4T7HaK/3wWSbBUd9swOfxNMUFSO/AF84JGH4KyvpoOHDe/XqCObct2it5Dm8PTRDTZPP0UPP0EIp628WrVrK/l9jDUz6BA3RhU19xdX1TLfvJWnJmvRopiTER2U/i0p+mxqHpyEPwdtGyZqojTNaJ/PZ7bq+Db9PglVSBXIkjHeKVJXQDUtznpju+oMGBwHhm7ycejvuWQPQ6uZxgaeLwRrADOxbJIhdHrF5i0H6oVOpOsMHt5zF7ziTfZDFnXZwQPLQFkoMXsbG4fd7Zm91NjaFAokZj6y7YTKPhk4FF/acGl3RINhbeMCweZ6ExzrKMLZTRQadsV3Tf0veaV0CRYTk0oinoEpmNPRlUFASN4OIwJOC2IPClCazQZxipwh95MOE7zkP536zhaNyX38pWjF8cU6dTOv2DoU5m4r7NZe1D8kjXtzNb7aZwegvg4PkHUAN+P2kxwDqSPNAcfVeQtw8L2LmgSb4WCxph48xsjXDkvOuFRX1GEKaehSarWXsz0Noqtb7WJteVAfYtC4HU5bzGEhPmM8ryARn9VtOVcFdPEiFrKbPQnraZmnrVZQsHK4jeZDUprUlosqsV7DOlop5EGGU6WVUMxQaBYOsL7xvgKBtXhcxd1G7+L3wRMHKvQl4VxmQqfon5MVk776k0Z52Xw5Tm1wEOneF9oAXjbk7XqKkwIUgCkVUtNzXKp5lVbOJmgvQYNSmHifL7i5yvP41C8HmrP4SgAi4pH+bPTUZAEfJmHH411ewmvYUwoFguYIIK+PL7vs7tUVaDgRBZaCniRqQdv3sxKubeaqioqa22uKu2y5FYL1MRHDh8HrhCljp16lajuLOq8wwboQqKarX2d4EZV1Vl9N3N253rs7VjeF/9JNxsb+LjAqWzKK+QsTraKSRYoBO8Gjg6cMWXd2PfSfQrmCc3apBstIkr5pTGkL5u3SiXnpXPiv6pk61AhB1s9nAFhv9WS2eMBmT33cqEkC1/X1D3XDhjaVDueOrErc3N6NWKyc8IfBBa2GqIv0uM0+POaj5NobRey4qauKKQul2f5g+C6yFaNvC9CizwmyaIGUiTclPMPsJkKu5QcCcxMU7R9t3+eDeckaPjuorI958HDW9J3RGct5Q68o2unE5QOQKM/IsmyvZo5x4BPvKOg1yzZFWiuF/8B

REM --------------------------------------------------------------------------------
REM rpatool by Shizmob 9a58396 2019-02-22T17:31:07.000Z
REM	https://github.com/Shizmob/rpatool
REM --------------------------------------------------------------------------------
REM set rpatool01=

set rpatool01=IyEvdXNyL2Jpbi9lbnYgcHl0aG9uDQpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IHByaW50X2Z1bmN0aW9uDQppbXBvcnQgc3lzDQppbXBvcnQgb3MNCnN5cy5wYXRoLmFwcGVuZCgnLi4nKQ0KdHJ5Og0KICAgIGltcG9ydCBtYWluDQpleGNlcHQ6DQogICAgcGFzcw0KaW1wb3J0IHJlbnB5Lm9iamVjdA0KaW1wb3J0IHJlbnB5LmNvbmZpZw0KaW1wb3J0IHJlbnB5LmxvYWRlcg0KdHJ5Og0KICAgIGltcG9ydCByZW5weS51dGlsDQpleGNlcHQ6DQogICAgcGFzcw0KY2xhc3MgUmVuUHlBcmNoaXZlOg0KICAgIGZpbGUgPSBOb25lDQogICAgaGFuZGxlID0gTm9uZQ0KDQogICAgZmlsZXMgPSB7fQ0KICAgIGluZGV4ZXMgPSB7fQ0KDQogICAgZGVmIF9faW5pdF9fKHNlbGYsIGZpbGUsIGluZGV4KToNCiAgICAgICAgc2VsZi5sb2FkKGZpbGUsIGluZGV4KQ0KDQogICAgIyBDb252ZXJ0cyBhIGZpbGVuYW1lIHRvIGFyY2hpdmUgZm9ybWF0Lg0KICAgIGRlZiBjb252ZXJ0X2ZpbGVuYW1lKHNlbGYsIGZpbGVuYW1lKToNCiAgICAgICAgKGRyaXZlLCBmaWxlbmFtZSkgPSBvcy5wYXRoLnNwbGl0ZHJpdmUob3MucGF0aC5ub3JtcGF0aChmaWxlbmFtZSkucmVwbGFjZShvcy5zZXAsICcvJykpDQogICAgICAgIHJldHVybiBmaWxlbmFtZQ0KDQoNCiAgICAjIExpc3QgZmlsZXMgaW4gYXJjaGl2ZSBhbmQgY3VycmVudCBpbnRlcm5hbCBzdG9yYWdlLg0KICAgIGRlZiBsaXN0KHNlbGYpOg0KICAgICAgICByZXR1cm4gbGlzdChzZWxmLmluZGV4ZXMpDQoNCiAgICAjIFJlYWQgZmlsZSBmcm9tIGFyY2hpdmUgb3IgaW50ZXJuYWwgc3RvcmFnZS4NCiAgICBkZWYgcmVhZChzZWxmLCBmaWxlbmFtZSk6DQogICAgICAgIGZpbGVuYW1lID0gc2VsZi5jb252ZXJ0X2ZpbGVuYW1lKGZpbGVuYW1lKQ0KICAgICAgICBpZihmaWxlbmFtZSAhPSAnLicgYW5kIGlzaW5zdGFuY2Uoc2VsZi5pbmRleGVzW2ZpbGVuYW1lXSwgbGlzdCkpOg0KICAgICAgICAgICAgaWYgaGFzYXR0cihyZW5weS5sb2FkZXIsICJsb2FkX2Zyb21fYXJjaGl2ZSIpOg0KICAgICAgICAgICAgICAgIHN1YmZpbGUgPSAgcmVucHkubG9hZGVyLmxvYWRfZnJvbV9hcmNoaXZlKGZpbGVuYW1lKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBzdWJmaWxlID0gIHJlbnB5LmxvYWRlci5sb2FkX2NvcmUoZmlsZW5hbWUpDQogICAgICAgICAgICByZXR1cm4gc3ViZmlsZS5yZWFkKCkNCiAgICAgICAgZWxzZTogcmV0dXJuIE5vbmUNCg0KICAgICMgTG9hZCBhcmNoaXZlLg0KICAgIGRlZiBsb2FkKHNlbGYsIGZpbGVuYW1lLCBpbmRleCk6DQogICAgICAgIHNlbGYuZmlsZSA9IGZpbGVuYW1lDQogICAgICAgIHNlbGYuZmlsZXMgPSB7fQ0KICAgICAgICBzZWxmLmluZGV4ZXMgPSB7fQ0KICAgICAgICBzZWxmLmhhbmRsZSA9IG9wZW4oc2VsZi5maWxlLCAncmInKQ0KICAgICAgICBiYXNlLCBleHQgPSBmaWxlbmFtZS5yc3BsaXQoIi4iLCAxKQ0KICAgICAgICByZW5weS5jb25maWcuYXJjaGl2ZXMuYXBwZW5kKGJhc2UpDQogICAgICAgIHJlbnB5LmNvbmZpZy5zZWFyY2hwYXRoID0gW29zLnBhdGguZGlybmFtZShvcy5wYXRoLnJlYWxwYXRoKHNlbGYuZmlsZSkpXQ0KICAgICAgICByZW5weS5jb25maWcuYmFzZWRpciA9IG9zLnBhdGguZGlybmFtZShyZW5weS5jb25maWcuc2VhcmNocGF0aFswXSkNCiAgICAgICAgcmVucHkubG9hZGVyLmluZGV4X2FyY2hpdmVzKCkNCiAgICAgICAgaXRlbXMgPSByZW5weS5sb2FkZXIuYXJjaGl2ZXNbaW5kZXhdWzFdLml0ZW1zKCkNCiAgICAgICAgZm9yIGZpbGUsIGluZGV4IGluIGl0ZW1zOg0KICAgICAgICAgICAgc2VsZi5pbmRleGVzW2ZpbGVdID0gaW5kZXgNCg0KaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoNCiAgICBpbXBvcnQgYXJncGFyc2UNCg0KICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKA0KICAgICAgICBkZXNjcmlwdGlvbj0nQSB0b29sIGZvciB3b3JraW5nIHdpdGggUmVuXCdQeSBhcmNoaXZlIGZpbGVzLicsDQogICAgICAgIGVwaWxvZz0nVGhlIEZJTEUgYXJndW1lbnQgY2FuIG9wdGlvbmFsbHkgYmUgaW4gQVJDSElWRT1SRUFMIGZvcm1hdCwgbWFwcGluZyBhIGZpbGUgaW4gdGhlIGFyY2hpdmUgZmlsZSBzeXN0ZW0gdG8gYSBmaWxlIG9uIHlvdXIgcmVhbCBmaWxlIHN5c3RlbS4gQW4gZXhhbXBsZSBvZiB0aGlzOiBycGF0b29sIC14IHRlc3QucnBhIHNjcmlwdC5ycHljPS9ob21lL2Zvby90ZXN0LnJweWMnLA0KICAgICAgICBhZGRfaGVscD1GYWxzZSkNCg0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1yJyxhY3Rpb249InN0b3JlX3RydWUiLCBkZXN0PSdyZW1vdmUnLCBoZWxwPSdEZWxldGUgYXJjaGl2ZXMgYWZ0ZXIgdW5wYWNraW5nLicpDQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnZGlyJyx0eXBlPXN0ciwgaGVscD0nVGhlIFJlblwncHkgZGlyIHRvIG9wZXJhdGUgb24uJykNCiAgICBhcmd1bWVudHMgPSBwYXJzZXIucGFyc2VfYXJncygpDQogICAgZGlyZWN0b3J5ID0gYXJndW1lbnRzLmRpcg0KICAgIHJlbW92ZSA9IGFyZ3VtZW50cy5yZW1vdmUNCiAgICBvdXRwdXQgPSAnLicNCiAgICBhcmNoaXZlX2V4dGVudGlvbnMgPSBbXQ0KICAgIGlmIGhhc2F0dHIocmVucHkubG9hZGVyLCAiYXJjaGl2ZV9oYW5kbGVycyIpOg0KICAgICAgICBmb3IgaGFuZGxlciBpbiByZW5weS5sb2FkZXIuYXJjaGl2ZV9oYW5kbGVyczoNCiAgICAgICAgICAgIGlmIGhhc2F0dHIoaGFuZGxlciwgImdldF9zdXBwb3J0ZWRfZXh0ZW5zaW9ucyIpOg0KICAgICAgICAgICAgICAgIGZvciBleHQgaW4gaGFuZGxlci5nZXRfc3VwcG9ydGVkX2V4dGVuc2lvbnMoKToNCiAgICAgICAgICAgICAgICAgICAgaWYgZXh0IG5vdCBpbiBhcmNoaXZlX2V4dGVudGlvbnM6DQogICAgICAgICAgICAgICAgICAgICAgICBhcmNoaXZlX2V4dGVudGlvbnMuYXBwZW5kKGV4dCkNCiAgICAgICAgICAgIGlmIGhhc2F0dHIoaGFuZGxlciwgImdldF9zdXBwb3J0ZWRfZXh0Iik6DQogICAgICAgICAgICAgICAgZm9yIGV4dCBpbiBoYW5kbGVyLmdldF9zdXBwb3J0ZWRfZXh0KCk6DQogICAgICAgICAgICAgICAgICAgIGlmIGV4dCBub3QgaW4gYXJjaGl2ZV9leHRlbnRpb25zOg0KICAgICAgICAgICAgICAgICAgICAgICAgYXJjaGl2ZV9leHRlbnRpb25zLmFwcGVuZChleHQpDQogICAgZWxzZTogYXJjaGl2ZV9leHRlbnRpb25zLmFwcGVuZCgnLnJwYScpDQogICAgYXJjaGl2ZXMgPSBbXQ0KICAgIGZvciByb290LCBkaXJzLCBmaWxlcyBpbiBvcy53YWxrKGRpcmVjdG9yeSk6DQogICAgICAgIGZvciBmaWxlIGluIGZpbGVzOg0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgIGJhc2UsIGV4dCA9IGZpbGUucnNwbGl0KCcuJywgMSkNCiAgICAgICAgICAgICAgICBpZiAnLicrZXh0IGluIGFyY2hpdmVfZXh0ZW50aW9uczoNCiAgICAgICAgICAgICAgICAgICAgYXJjaGl2ZXMuYXBwZW5kKGZpbGUpDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgcGFzcw0KICAgIGlmIGFyY2hpdmVzICE9IFtdOg0KICAgICAgICBmb3IgYXJjaCBpbiBhcmNoaXZlczoNCiAgICAgICAgICAgIHByaW50KCIgIFVucGFja2luZyBcInswfVwiIGFyY2hpdmUuIi5mb3JtYXQoYXJjaCkpDQogICAgICAgICAgICAjIHRyeToNCiAgICAgICAgICAgIGFyY2hpdmUgPSBSZW5QeUFyY2hpdmUoYXJjaCwgYXJjaGl2ZXMuaW5kZXgoYXJjaCkpDQoNCiAgICAgICAgICAgIGZpbGVzID0gYXJjaGl2ZS5saXN0KCkNCg0KICAgICAgICAgICAgIyBDcmVhdGUgb3V0cHV0IGRpcmVjdG9yeSBpZiBub3QgcHJlc2VudC4NCiAgICAgICAgICAgIGlmIG5vdCBvcy5wYXRoLmV4aXN0cyhvdXRwdXQpOg0KICAgICAgICAgICAgICAgIG9zLm1ha2VkaXJzKG91dHB1dCkNCg0KICAgICAgICAgICAgIyBJdGVyYXRlIG92ZXIgZmlsZXMgdG8gZXh0cmFjdC4NCiAgICAgICAgICAgIGZvciBmaWxlbmFtZSBpbiBmaWxlczoNCiAgICAgICAgICAgICAgICBvdXRmaWxlID0gZmlsZW5hbWUNCiAgICAgICAgICAgICAgICBjb250ZW50cyA9IGFyY2hpdmUucmVhZChmaWxlbmFtZSkNCiAgICAgICAgICAgICAgICBpZihOb25lICE9IGNvbnRlbnRzKToNCiAgICAgICAgICAgICAgICAgICAgIyBDcmVhdGUgb3V0cHV0IGRpcmVjdG9yeSBmb3IgZmlsZSBpZiBub3QgcHJlc2VudC4NCiAgICAgICAgICAgICAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmpvaW4ob3V0cHV0LCBvdXRmaWxlKSkpOg0KICAgICAgICAgICAgICAgICAgICAgICAgb3MubWFrZWRpcnMob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguam9pbihvdXRwdXQsIG91dGZpbGUpKSkNCg0KICAgICAgICAgICAgICAgICAgICB3aXRoIG9wZW4ob3MucGF0aC5qb2luKG91dHB1dCwgb3V0ZmlsZSksICd3YicpIGFzIGZpbGU6DQogICAgICAgICAgICAgICAgICAgICAgICBmaWxlLndyaXRlKGNvbnRlbnRzKQ0KICAgICAgICAgICAgIyBleGNlcHQgRXhjZXB0aW9uIGFzIGVycjoNCiAgICAgICAgICAgICMgICAgIHByaW50KGVycikNCiAgICAgICAgICAgICMgICAgIHN5cy5leGl0KDEpDQogICAgICAgIHByaW50KCIgIEFsbCBhcmNoaXZlcyB1bnBhY2tlZC4iKQ0KICAgICAgICBpZiByZW1vdmU6DQogICAgICAgICAgICBmb3IgYXJjaGl2ZSBpbiBhcmNoaXZlczoNCiAgICAgICAgICAgICAgICBwcmludCgiICBBcmNoaXZlIHswfSBoYXMgYmVlbiBkZWxldGVkLiIuZm9ybWF0KGFyY2hpdmUpKQ0KICAgICAgICAgICAgICAgIG9zLnJlbW92ZSgiezB9XHsxfSIuZm9ybWF0KGRpcmVjdG9yeSwgYXJjaGl2ZSkpDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQoIiAgVGhlcmUgYXJlIG5vIGFyY2hpdmVzIGluIHRoZSBnYW1lIGZvbGRlci4iKQ0K

REM --------------------------------------------------------------------------------
REM !! DO NOT EDIT BELOW THIS LINE !!
REM --------------------------------------------------------------------------------
set "version=forall(v9.5) (010325)"
title UnRen.bat - %version%
:init
REM --------------------------------------------------------------------------------
REM Splash screen
REM --------------------------------------------------------------------------------
cls
echo.
echo [91m     __  __      ____               __          __[0m
echo [91m    / / / /___  / __ \___  ____    / /_  ____ _/ /_[0m
echo [91m   / / / / __ \/ /_/ / _ \/ __ \  / __ \/ __ ^`/ __/[0m
echo [91m  / /_/ / / / / _^, _/  __/ / / / / /_/ / /_/ / /_[0m
echo [91m  \____/_/ /_/_/ ^|_^|\___/_/ /_(_)_.___/\__^,_/\__/ - %version%[0m
echo [91m  Sam @ www.f95zone.to ^& Gideon ^& master861 [0m
echo [91m  Are Spezial Thx to Madeddy for his fix with renpy and the mp error [0m
echo.
echo  ----------------------------------------------------
echo.

REM --------------------------------------------------------------------------------
REM We need powershell for later, make sure it exists
REM --------------------------------------------------------------------------------
if not exist "%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe" (
	echo	! Error: Powershell is required, unable to continue.
	echo			 This is included in Windows 7, 8, 10. XP/Vista users can
	echo			 download it here: http://support.microsoft.com/kb/968929
	echo.
	pause>nul|set/p=.			Press any key to exit...
	exit
)

REM --------------------------------------------------------------------------------
REM Set our paths, and make sure we can find python exe
REM --------------------------------------------------------------------------------

set "currentdir=%~1"
if not "%currentdir:~-1%"=="\" set "currentdir=%currentdir%\"
cd /d "%~1"

IF [%currentdir%] == [] (set "currentdir=%cd%") ELSE (cd "%currentdir%")

if exist "lib\windows-x86_64\python.exe" (
	if not "%PROCESSOR_ARCHITECTURE%"=="x86" (
		set "pythondir=%cd%\lib\windows-x86_64\"
	) else if exist "lib\windows-i686\python.exe" (
		set "pythondir=%cd%\lib\windows-i686\"
	)
) else if exist "lib\windows-i686\python.exe" (
	set "pythondir=%cd%\lib\windows-i686\"
)
if exist "lib\py2-windows-x86_64\python.exe" (
	if not "%PROCESSOR_ARCHITECTURE%"=="x86" (
		set "pythondir=%cd%\lib\py2-windows-x86_64\"
    ) else if exist "lib\py2-windows-i686\python.exe" (
		set "pythondir=%cd%\lib\py2-windows-i686\"
	)
) else if exist "lib\py2-windows-i686\python.exe" (
	set "pythondir=%cd%\lib\py2-windows-i686\"
)
if exist "lib\py3-windows-x86_64\python.exe" (
	if not "%PROCESSOR_ARCHITECTURE%"=="x86" (
		set "pythondir=%cd%\lib\py3-windows-x86_64\"
    ) else if exist "lib\py3-windows-i686\python.exe" (
		set "pythondir=%cd%\lib\py3-windows-i686\"
	)
) else if exist "lib\py3-windows-i686\python.exe" (
	set "pythondir=%cd%\lib\py3-windows-i686\"
)

if not exist "%pythondir%" (
	echo	! Error: Cannot locate python directory, unable to continue.
	echo			 Are you sure we're in the game's root directory?
	echo.
	pause>nul|set/p=.			Press any key to exit...
	exit
)

if exist "game" if exist "renpy" (
	set "renpydir=%cd%\renpy\"
	set "gamedir=%cd%\game\"
) else (
	echo	! Error: Cannot locate game directory, unable to continue.
	echo			 Are you sure we're in the game's root directory?
	echo.
	pause>nul|set/p=.			Press any key to exit...
	exit
)

set "PYTHONHOME=%pythondir%"
if exist "lib\pythonlib2.7" (
	set "PYTHONPATH=%cd%\lib\pythonlib2.7"
) else if exist "lib\python2.7" (
	set "PYTHONPATH=%cd%\lib\python2.7"
) else if exist "lib\python3.9" (
	set "PYTHONPATH=%cd%\lib\python3.9"
)


:menu
REM --------------------------------------------------------------------------------
REM Menu selection
REM --------------------------------------------------------------------------------
set exitoption=
echo	Available Options:
echo [92m 1) Extract RPA packages[0m
echo [92m 2) Decompile rpyc files old renpy lower as 7[0m
echo [92m 3) Enable Console and Developer Menu[0m
echo [92m 4) Enable Quick Save and Quick Load[0m
echo [92m 5) Force enable skipping of unseen content[0m
echo [92m 6) Force enable rollback (scroll wheel)[0m
echo [92m 7) Deobfuscate Decompile rpyc files[0m
echo [92m 8) Extract and Decompile[0m
echo [92m 9) All of the above[0m
echo [92m 10) Decompile rpyc files new renpy 7 and higher [0m
echo [92m 11) Add 0x52_URM [0m
echo.
set /p option=.  Enter a number:
echo.
echo  ----------------------------------------------------
echo.
if "%option%"=="1" call :extract
if "%option%"=="2" call :decompile
if "%option%"=="3" call :console
if "%option%"=="4" call :quick
if "%option%"=="5" call :skip
if "%option%"=="6" call :rollback
if "%option%"=="7" call :decompile
if "%option%"=="8" call :extract
if "%option%"=="9" call :extract
if "%option%"=="10" call :decompile
if "%option%"=="11" call :urm
call :init

:urm
REM --------------------------------------------------------------------------------
REM Download 0x52_URM
REM --------------------------------------------------------------------------------
set URL="https://api.0x52.dev/modversions/1222/download"
set OUT="%gamedir%0x52_URM.rpa"
echo	Downloading 0x52_URM.rpa to %OUT%
powershell.exe -Command ^
  "(New-Object System.Net.WebClient).DownloadFile('%URL%','%OUT%')"
call :finish
exit /b

:extract
REM --------------------------------------------------------------------------------
REM Write _rpatool.py from our base64 strings
REM --------------------------------------------------------------------------------
set "rpatool=%cd%\rpatool.py"
echo	Creating rpatool...
if exist "%rpatool%.tmp" (
	del "%rpatool%.tmp"
)
if exist "%rpatool%" (
	del "%rpatool%"
)

REM echo %rpatool%>> "%rpatool%.tmp"
echo %rpatool01%>> "%rpatool%.tmp"
set "rpatoolps=%rpatool:[=`[%"
set "rpatoolps=%rpatoolps:]=`]%"
set "rpatoolps=%rpatoolps:^=^^%"
set "rpatoolps=%rpatoolps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%rpatoolps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%rpatoolps%.tmp\"))) }"

echo.
echo	Remove RPA archives after extraction?
set /p delrpa=.	Enter (y/n):
if "%delrpa%" == "y" (
	echo	+ RPA archives will be deleted
	echo.
)
if "%delrpa%" == "n" (
	echo	+ RPA archives won't be deleted
	echo.
)

REM --------------------------------------------------------------------------------
REM Unpack RPA
REM --------------------------------------------------------------------------------
echo	Searching for RPA packages
cd %gamedir%

if "%delrpa%" == "y" (
	if exist "%pythondir%Lib" (
		"%pythondir%python.exe" -O "%rpatool%" -r "%gamedir%
	) else (
		"%pythondir%python.exe" "%rpatool%" -r "%gamedir%
	)
) else (
	if exist "%pythondir%Lib" (
		"%pythondir%python.exe" -O "%rpatool%" "%gamedir%
	) else (
		"%pythondir%python.exe" "%rpatool%" "%gamedir%
	)
)

echo.

REM --------------------------------------------------------------------------------
REM Clean up
REM --------------------------------------------------------------------------------
echo	Cleaning up temporary files...
if exist "%rpatool%.tmp" del "%rpatool%.tmp"
if exist "%rpatool%" del "%rpatool%"
if exist "%cd%\__pycache__" rmdir /Q /S "%cd%\__pycache__"
cd %currentdir%
echo.
if "%option%" == "9" call :decompile
if "%option%" == "8" call :decompile
call :finish
exit /b

:decompile
REM --------------------------------------------------------------------------------
REM Write to temporary file first, then convert. Needed due to binary file
REM --------------------------------------------------------------------------------
set "decompcab=%cd%\decomp.cab"
set "decompilerdir=%cd%\decompiler"
set "unrpycpy=%cd%\unrpyc.py"
set "deobfuscate=%cd%\deobfuscate.py"
if exist "%decompcab%.tmp" (
	del "%decompcab%.tmp"
)
if exist "%decompcab%" (
	del "%decompcab%"
)
if exist "%decompilerdir%" (
	rmdir /Q /S "%decompilerdir%"
)

if exist "%unrpyc%.tmp" (
	del "%unrpyc%.tmp"
)
if exist "%unrpyc%" (
	del "%unrpyc%"
)

echo %decompcab01%>> "%decompcab%.tmp"
echo %decompcab02%>> "%decompcab%.tmp"
echo %decompcab03%>> "%decompcab%.tmp"
echo %decompcab04%>> "%decompcab%.tmp"
echo %decompcab05%>> "%decompcab%.tmp"
echo %decompcab06%>> "%decompcab%.tmp"
echo %decompcab07%>> "%decompcab%.tmp"
echo %decompcab08%>> "%decompcab%.tmp"
echo %decompcab09%>> "%decompcab%.tmp"
echo %decompcab10%>> "%decompcab%.tmp"
echo %decompcab11%>> "%decompcab%.tmp"
echo %decompcab12%>> "%decompcab%.tmp"
set "decompcabps=%decompcab:[=`[%"
set "decompcabps=%decompcabps:]=`]%"
set "decompcabps=%decompcabps:^=^^%"
set "decompcabps=%decompcabps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%decompcabps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%decompcabps%.tmp\"))) }"

echo.

REM --------------------------------------------------------------------------------
REM Once converted, extract the cab file. Needs to be a cab file due to expand.exe
REM --------------------------------------------------------------------------------
echo	Extracting _decomp.cab...
mkdir "%decompilerdir%"
expand -F:* "%decompcab%" "%decompilerdir%" >nul
move "%decompilerdir%\unrpyc.py" "%unrpycpy%" >nul
move "%decompilerdir%\deobfuscate.py" "%deobfuscate%" >nul

REM --------------------------------------------------------------------------------
REM Decompile rpyc files
REM --------------------------------------------------------------------------------
echo	Searching for rpyc files...
cd %gamedir%
REM set "PYTHONPATH=%pythondir%Lib"

if exist "%pythondir%Lib" (
	if "%option%" == "2" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" -O "%unrpycpy%" --no-init-offset "%gamedir%
	)
	if "%option%" == "9" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" -O "%unrpycpy%" --no-init-offset "%gamedir%
	)
	if "%option%" == "8" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" -O "%unrpycpy%" --no-init-offset "%gamedir%
	)
	if "%option%" == "7" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" -O "%unrpycpy%" --no-init-offset --try-harder "%gamedir%
	)
	if "%option%" == "10" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" -O "%unrpycpy%" "%gamedir%
	)
) else (
	if "%option%" == "2" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" "%unrpycpy%" --no-init-offset "%gamedir%
	)
	if "%option%" == "9" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" "%unrpycpy%" --no-init-offset  "%gamedir%
	)
	if "%option%" == "8" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" "%unrpycpy%" --no-init-offset "%gamedir%
	)
	if "%option%" == "7" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" "%unrpycpy%" --no-init-offset --try-harder "%gamedir%
	)
	if "%option%" == "10" (
		echo    + Searching for rpyc files in %gamedir%
		"%pythondir%python.exe" "%unrpycpy%" "%gamedir%
	)
)
echo.

REM --------------------------------------------------------------------------------
REM Clean up
REM --------------------------------------------------------------------------------
echo	Cleaning up temporary files...
cd %currentdir%
if exist "%unrpycpy%o" del "%unrpycpy%o"
if exist "%unrpyc%" del "%unrpyc%"
if exist "%unrpycpy%" del "%unrpycpy%"
if exist "%unrpycpy%.tmp" del "%decompcab%.tmp"
if exist "%decompcab%" del "%decompcab%"
if exist "%decompcab%.tmp" del "%decompcab%.tmp"
if exist "%deobfuscate%" del "%deobfuscate%"
if exist "%deobfuscate%o" del "%deobfuscate%o"
if exist "__pycache__" rmdir /Q /S "__pycache__"
if exist "%decompilerdir%" rmdir /Q /S "%decompilerdir%"
echo.
if "%option%" == "9" call :console
call :finish
exit /b

:console
REM --------------------------------------------------------------------------------
REM Drop our console/dev mode enabler into the game folder
REM --------------------------------------------------------------------------------
echo	Creating Developer/Console file...
set "unren-console=%cd%\game\unren-console.rpy"
set unren-console01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIGNvbmZpZy5kZXZlbG9wZXIgPSBUcnVlDQogICAgY29uZmlnLmNvbnNvbGUgPSBUcnVl

if exist "%unren-console%.tmp" (
	del "%unren-console%.tmp"
)
if exist "%unren-console%" (
	del "%unren-console%"
)

echo %unren-console01%>> "%unren-console%.tmp"
set "unren-consoleps=%unren-console:[=`[%"
set "unren-consoleps=%unren-consoleps:]=`]%"
set "unren-consoleps=%unren-consoleps:^=^^%"
set "unren-consoleps=%unren-consoleps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%unren-consoleps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%unren-consoleps%.tmp\"))) }"

echo	+ Console: SHIFT+O
echo	+ Dev Menu: SHIFT+D
echo.
del "%unren-console%.tmp"

if "%option%" == "9" call :quick
call :finish
exit /b

:quick
REM --------------------------------------------------------------------------------
REM Drop our Quick Save/Load file into the game folder
REM --------------------------------------------------------------------------------
echo	unren-quick.rpy...
set "unren-quick=%cd%\game\unren-quick.rpy"
set unren-quick01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIHRyeToNCiAgICAgICAgY29uZmlnLnVuZGVybGF5WzBdLmtleW1hcFsncXVpY2tTYXZlJ10gPSBRdWlja1NhdmUoKQ0KICAgICAgICBjb25maWcua2V5bWFwWydxdWlja1NhdmUnXSA9ICdLX0Y1Jw0KICAgICAgICBjb25maWcudW5kZXJsYXlbMF0ua2V5bWFwWydxdWlja0xvYWQnXSA9IFF1aWNrTG9hZCgpDQogICAgICAgIGNvbmZpZy5rZXltYXBbJ3F1aWNrTG9hZCddID0gJ0tfRjknDQogICAgZXhjZXB0Og0KICAgICAgICBwYXNz

if exist "%unren-quick%.tmp" (
	del "%unren-quick%.tmp"
)
if exist "%unren-quick%" (
	del "%unren-quick%"
)

echo %unren-quick01%>> "%unren-quick%.tmp"
set "unren-quickps=%unren-quick:[=`[%"
set "unren-quickps=%unren-quickps:]=`]%"
set "unren-quickps=%unren-quickps:^=^^%"
set "unren-quickps=%unren-quickps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%unren-quickps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%unren-quickps%.tmp\"))) }"

echo	Default hotkeys:
echo	+ Quick Save: F5
echo	+ Quick Load: F9
echo.
del "%unren-quick%.tmp"

if "%option%" == "9" call :skip
call :finish
exit /b

:skip
REM --------------------------------------------------------------------------------
REM Drop our skip file into the game folder
REM --------------------------------------------------------------------------------
echo	Creating skip file...
set "unren-skip=%cd%\game\unren-skip.rpy"
set unren-skip01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIF9wcmVmZXJlbmNlcy5za2lwX3Vuc2VlbiA9IFRydWUNCiAgICByZW5weS5nYW1lLnByZWZlcmVuY2VzLnNraXBfdW5zZWVuID0gVHJ1ZQ0KICAgIHJlbnB5LmNvbmZpZy5hbGxvd19za2lwcGluZyA9IFRydWUNCiAgICByZW5weS5jb25maWcuZmFzdF9za2lwcGluZyA9IFRydWUNCiAgICB0cnk6DQogICAgICAgIGNvbmZpZy5rZXltYXBbJ3NraXAnXSA9IFsgJ0tfTENUUkwnLCAnS19SQ1RSTCcgXQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcGFzcw0K

if exist "%unren-skip%.tmp" (
	del "%unren-skip%.tmp"
)
if exist "%unren-skip%" (
	del "%unren-skip%"
)

echo %unren-skip01%>> "%unren-skip%.tmp"
set "unren-skipps=%unren-skip:[=`[%"
set "unren-skipps=%unren-skipps:]=`]%"
set "unren-skipps=%unren-skipps:^=^^%"
set "unren-skipps=%unren-skipps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%unren-skipps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%unren-skipps%.tmp\"))) }"

echo	+ You can now skip all text using TAB and CTRL keys
echo.
del "%unren-skip%.tmp"

if "%option%" == "9" call :rollback
call :finish
exit /b

:rollback
REM --------------------------------------------------------------------------------
REM Drop our rollback file into the game folder
REM --------------------------------------------------------------------------------
echo	Creating rollback file...
set "unren-rollback=%cd%\game\unren-rollback.rpy"
set unren-rollback01=aW5pdCA5OTkgcHl0aG9uOg0KICAgIHJlbnB5LmNvbmZpZy5yb2xsYmFja19lbmFibGVkID0gVHJ1ZQ0KICAgIHJlbnB5LmNvbmZpZy5oYXJkX3JvbGxiYWNrX2xpbWl0ID0gMjU2DQogICAgcmVucHkuY29uZmlnLnJvbGxiYWNrX2xlbmd0aCA9IDI1Ng0KICAgIGRlZiB1bnJlbl9ub2Jsb2NrKCAqYXJncywgKiprd2FyZ3MgKToNCiAgICAgICAgcmV0dXJuDQogICAgcmVucHkuYmxvY2tfcm9sbGJhY2sgPSB1bnJlbl9ub2Jsb2NrDQogICAgdHJ5Og0KICAgICAgICBjb25maWcua2V5bWFwWydyb2xsYmFjayddID0gWyAnS19QQUdFVVAnLCAncmVwZWF0X0tfUEFHRVVQJywgJ0tfQUNfQkFDSycsICdtb3VzZWRvd25fNCcgXQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcGFzcw==

if exist "%unren-rollback%.tmp" (
	del "%unren-rollback%.tmp"
)
if exist "%unren-rollback%" (
	del "%unren-rollback%"
)

echo %unren-rollback01%>> "%unren-rollback%.tmp"
set "unren-rollbackps=%unren-rollback:[=`[%"
set "unren-rollbackps=%unren-rollbackps:]=`]%"
set "unren-rollbackps=%unren-rollbackps:^=^^%"
set "unren-rollbackps=%unren-rollbackps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%unren-rollbackps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%unren-rollbackps%.tmp\"))) }"

echo	+ You can now rollback using the scrollwheel
echo.
del "%unren-rollback%.tmp"

call :finish
exit /b

:finish
REM --------------------------------------------------------------------------------
REM We are done
REM --------------------------------------------------------------------------------
echo  ----------------------------------------------------
echo.
echo	Finished!
echo.
echo	Enter "1" to go back to the menu, or any other
set /p exitoption=.	key to exit:
echo.
echo  ----------------------------------------------------
echo.
if "%exitoption%"=="1" goto menu
exit 0
